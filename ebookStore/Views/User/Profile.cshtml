
@if (ViewBag.Message != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @ViewBag.Message
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (ViewBag.Error != null)

{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @ViewBag.Error
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Message"] != null)

{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)

{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@model ebookStore.Models.ViewModels.ProfileViewModel
@{
    ViewData["Title"] = "User Profile";



    var username = ViewData["Username"] as string ?? "Guest";

    var role = ViewData["Role"] as string ?? "User";

    var waitingList = ViewData["WaitingList"] as List<dynamic>;
}

<div class="container mt-4">
    <h1 class="text-center text-primary">User Profile</h1>
    <hr class="my-4" />

    <!-- Profile Details Section -->
    <div class="row profile-details">
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <h3 class="card-title mb-3">Profile Details</h3>
                    <p class="card-text"><strong>Username:</strong> @username</p>
                    <p class="card-text"><strong>First Name:</strong> @Model.FirstName</p>
                    <p class="card-text"><strong>Last Name:</strong> @Model.LastName</p>
                    <p class="card-text"><strong>Email:</strong> @Model.Email</p>
                    <p class="card-text"><strong>Role:</strong> @role</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Borrowed Books Section -->
    <div class="borrowed-books mt-4">
        <h3 class="text-secondary">Borrowed Books</h3>
        @if (Model.BorrowedBooks != null && Model.BorrowedBooks.Any())

        {
            <div class="d-flex flex-nowrap overflow-x-auto g-4">
                @foreach (var book in Model.BorrowedBooks)

                {
                    <div class="card flex-shrink-0" style="width: 300px;">
                        <div class="card-body">
                            <h5 class="card-title text-truncate">@book.Title</h5>
                            <p class="card-text"><strong>Author:</strong> @book.Author</p>
                            <p class="card-text"><strong>Borrow Date:</strong> @book.BorrowDate.ToString("yyyy-MM-dd")</p>
                            <p class="card-text"><strong>Return Date:</strong> @book.ReturnDate.ToString("yyyy-MM-dd")</p>
                            <div class="mt-3">
                                <a href="@Url.Action("BookProfile", "Home", new { id = book.BookId })"
                                   class="btn btn-primary w-100">View Book Profile</a>
                            </div>
                            <!-- Download Button for Borrowed Books -->
                            <a href="@Url.Action("DownloadBook", "User", new { bookId = book.BookId })"
                               class="btn btn-success w-100 mt-2">Download</a>
                            <button class="btn btn-danger w-100 mt-2" onclick="unborrowBook(@book.BookId)">Unborrow</button>
                        </div>
                    </div>
                }
            </div>
        }

        else

        {
            <p>No borrowed books found.</p>
        }
    </div>

    <hr class="my-4" />

    <!-- Purchased Books Section -->
    <div class="purchased-books mt-4">
        <h3 class="text-secondary">Purchased Books</h3>
        @if (Model.PurchasedBooks != null && Model.PurchasedBooks.Any())

        {
            <div class="d-flex flex-nowrap overflow-x-auto g-4">
                @foreach (var book in Model.PurchasedBooks)

                {
                    <div class="card flex-shrink-0" style="width: 300px;">
                        <div class="card-body">
                            <h5 class="card-title text-truncate">@book.Title</h5>
                            <p class="card-text"><strong>Author:</strong> @book.Author</p>
                            <p class="card-text"><strong>Purchase Date:</strong> @book.PurchaseDate.ToString("yyyy-MM-dd")</p>
                            <div class="mt-3">
                                <a href="@Url.Action("BookProfile", "Home", new { id = book.BookId })"
                                   class="btn btn-primary w-100">View Book Profile</a>
                            </div>
                            <!-- Download Button for Purchased Books -->
                            <a href="@Url.Action("DownloadBook", "User", new { bookId = book.BookId })"
                               class="btn btn-success w-100 mt-2">Download</a>
                            <button class="btn btn-danger w-100 mt-2" onclick="deletePurchasedBook(@book.BookId)">Delete</button>
                        </div>
                    </div>
                }
            </div>
        }

        else

        {
            <p>No purchased books found.</p>
        }
    </div>

    <hr class="my-4" />

    <!-- Waiting List Section -->
    <div class="waiting-list mt-4">
        <h3 class="text-secondary">Waiting List</h3>
        @if (waitingList != null && waitingList.Any())

        {
            <div class="d-flex flex-nowrap overflow-x-auto g-4">
                @foreach (var item in waitingList)

                {
                    <div class="card flex-shrink-0" style="width: 300px;">
                        <div class="card-body">
                            <h5 class="card-title text-truncate">@item.Title</h5>
                            <p class="card-text"><strong>Author:</strong> @item.Author</p>
                            <p class="card-text"><strong>Added On:</strong> @item.AddedOn.ToString("yyyy-MM-dd")</p>
                            <div class="mt-3">
                                <a href="@Url.Action("BookProfile", "Home", new { id = item.BookId })"
                                   class="btn btn-primary w-100">View Book Profile</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }

        else

        {
            <p>No books in your waiting list.</p>
        }
    </div>
</div>

<!-- Custom Styles -->
<style>
    .profile-details .card {
        border-radius: 10px;
    }

    .profile-details .card-body {
        padding: 20px;
    }

    .borrowed-books, .purchased-books, .waiting-list {
        margin-top: 30px;
    }

    .borrowed-books .card, .purchased-books .card, .waiting-list .card {
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .borrowed-books .card-body, .purchased-books .card-body, .waiting-list .card-body {
        padding: 15px;
    }

    h3.text-secondary {
        font-weight: 600;
        color: #555;
    }

    h1.text-primary {
        font-weight: bold;
        font-size: 2.5rem;
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function unborrowBook(bookId) {
        if (confirm("Are you sure you want to unborrow this book?")) {
            $.ajax({
                url: '@Url.Action("UnborrowBook", "User")',
                type: 'POST',
                data: { bookId: bookId },
                success: function (response) {
                    alert("Book returned successfully!");
                    location.reload();
                },
                error: function (xhr, status, error) {
                    alert("An error occurred while returning the book.");
                }
            });
        }
    }

    function deletePurchasedBook(bookId) {
        if (confirm("Are you sure you want to delete this purchased book?")) {
            $.ajax({
                url: '@Url.Action("DeletePurchasedBook", "User")',
                type: 'POST',
                data: { bookId: bookId },
                success: function (response) {
                    alert("Book deleted successfully!");
                    location.reload();
                },
                error: function (xhr, status, error) {
                    alert("An error occurred while deleting the book.");
                }
            });
        }
    }
</script>